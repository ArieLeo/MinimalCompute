#pragma kernel KernelDraw
#pragma kernel KernelPercentage

RWTexture2D<float4> Result;
Texture2D ResultForPercentage;

float2 _MousePos;
int _MouseMode;

struct PixelPercentageData
{
	uint filledCount;
	uint processedCount;
};
RWStructuredBuffer<PixelPercentageData> data;

[numthreads(8,8,1)]
void KernelDraw (uint3 id : SV_DispatchThreadID)
{
	int2 newPixelID = _MousePos;
	float dist = distance(float2(id.xy),float2(newPixelID));
	if(dist < 5.0f)
	{
		if( _MouseMode == 0) //Draw
		{
			Result[id.xy] = float4(1,1,1,1);
		}
		else if( _MouseMode == 1) //Erase
		{
			Result[id.xy] = float4(0,0,0,1);
		}
	}
}

[numthreads(8,8,1)]
void KernelPercentage (uint3 id : SV_DispatchThreadID)
{
	float4 col = ResultForPercentage[id.xy];
	if(col.r >= 1)
	{
		InterlockedAdd(data[0].filledCount,1); //Interlocked prevents race condition
	}
	InterlockedAdd(data[0].processedCount,1);
}

